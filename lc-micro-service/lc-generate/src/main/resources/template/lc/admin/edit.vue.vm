<template>
  <div class="createPost-container">
    <el-form ref="postForm" :model="postForm" :rules="rules" class="form-container">
      <sticky :z-index="10" :class-name="'sub-navbar '+postForm.status">
        #*  <Dropdown v-model="postForm." />*#
        <el-button v-loading="loading" style="margin-left: 10px;" type="success" @click="submitForm('postForm')">保存</el-button>
        <el-button v-loading="loading" type="danger" @click="draftForm">取消</el-button>
      </sticky>

      <div class="createPost-main-container">
        <el-col :span="11" >
      #foreach ($column in $columns)
          #if(${velocityCount}%2==1 )

          <el-form-item style="margin-bottom: 30px;" label-width="100px" label="$column.attrname"  prop="$column.attrname">
            <el-input v-model="postForm.$column.attrname" style="width: 60%"  placeholder="请输入$column.comments" />
          </el-form-item>
        #end
      #end


        </el-col>
        <el-col :span="11" >
            #foreach ($column in $columns)
                #if(${velocityCount}%2==0 )
                    <el-form-item style="margin-bottom: 30px;" label-width="100px" label="$column.attrname"  prop="$column.attrname">
                        <el-input v-model="postForm$column.attrname" style="width: 60%"  placeholder="请输入$column.comments" />
                    </el-form-item>
                #end
            #end
        </el-col>
      </div>
    </el-form>
  </div>
</template>

<!--suppress JSAnnotator -->
<script>
  import Sticky from '@/components/Sticky' // 粘性header组件

  import {
      Dropdown
  } from './Dropdown'
  import bxUtils from '@/utils/zzjr-bx-utils'

  const defaultForm = {
    status:'draft',
        #foreach ($column in $columns)
            ${column.attrname}:null,
        #end
  }

  export default {
    components: {Sticky
        ,Dropdown
    },
    data() {
      return {
        postForm: Object.assign({}, defaultForm),
        loading: false,
        rules: {
        #foreach ($column in $columns)
            ${column.attrname}:[
            #if(${column.attrType.indexOf("Integer")}!=-1||${column.attrType.indexOf("Double")}!=-1)
                { type: 'number', message: '${column.comments}必须为数字值',trigger: 'blur' },
            #end
            #if(${column.attrType.indexOf("Integer")}==-1&&${column.attrType.indexOf("Double")}==-1)
                { max: 999, message: '最大长度为',trigger: 'blur'},
            #end
            ],
        #end
        }
      }
    },
    created() {
      let id = this.$route.query.id;
      if (id != null) {
        this.findData(id);
      } else {
        this.postForm = Object.assign({}, defaultForm)
      }
    },
    methods: {
      //根据ID查询数据,回显
      findData(id) {
        this.axios.get( '/${moduleName}/${pathName}/'+id).then(response => {
          if(response.code == 200){
            this.postForm = Object.assign({}, response.data);
            this.postForm.status = 'draft';
          }else{
            this.message({message: response.msg, type: 'error'})
          }
        })};
      },
      //保存数据
      submitForm(postForm) {
        this.${vueSymbolOne}refs[postForm].validate((valid) => {
          if (valid) {
            this.editPost().then(response => {
              if(response.code == 200){
                this.${vueSymbolOne}message({message: '保存成功', type: 'success'});
                  this.draftForm();
              }else{
                this.${vueSymbolOne}message({message: response.msg, type: 'error'})
              }
            });
          } else {
            console.log('error submit!!');
            return false;
          }
        });

      },
      //取消操作
      draftForm() {
        bxUtils.closeAppointView(this.${vueSymbolOne}route, '/${moduleName}/${pathName}');
        this.postForm.status = 'draft'
      },editPost(){
            if(this.postForm.id != null){
                return this.${vueSymbolOne}axios.put('/${moduleName}/${pathName}/'+this.postForm.id , JSON.stringify(this.postForm),
                        {headers: {'Content-Type': 'application/json;charset-UTF-8'}})
            }else{
                return this.${vueSymbolOne}axios.post('/${moduleName}/${pathName}', JSON.stringify(this.postForm),
                        {headers: {'Content-Type': 'application/json;charset-UTF-8'}})
            }
        },
    }
  }
</script>

<style lang="scss" >
  @import "~@/styles/mixin.scss";
  .createPost-container {
    position: relative;
    .createPost-main-container {
      padding: 20px 45px 20px 50px;
      .postInfo-container {
        position: relative;
        @include clearfix;
        margin-bottom: 10px;
        .postInfo-container-item {
          float: left;
        }
      }
    }
    .word-counter {
      width: 40px;
      position: absolute;
      right: -10px;
      top: 0px;
    }
  }


</style>
